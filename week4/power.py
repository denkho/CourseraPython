'''
Дано действительное положительное число a и целое неотрицательное число n. Вычислите aⁿ, не используя циклы и стандартную функцию pow, но используя рекуррентное соотношение aⁿ=a⋅aⁿ⁻¹.

Решение оформите в виде функции power(a, n) (которая возвращает aⁿ).
'''

def power(a, n):
    if n == 0:
            return 1
        if n != 0:
            return a * power(a, n - 1)

a = float(input())
n = int(input())
print(power(a, n))

'''
Возводить в степень можно гораздо быстрее, чем за n умножений! Для этого нужно воспользоваться следующими рекуррентными соотношениями: aⁿ = (a²)ⁿ/² при четном n, aⁿ=a⋅aⁿ⁻¹ при нечетном n. Реализуйте алгоритм быстрого возведения в степень. Если вы все сделаете правильно,то сложность вашего алгоритма будет O(logn).

Формат ввода

Вводится действительное число a и целое неотрицательное число n.
'''
'''
def power(a, n):
    if n == 0:
        return 1
    if n % 2 != 0:
        return a*power(a, n-1)
    else:
        return power(a**2, n/2)


print(power(float(input()), int(input())))
'''
